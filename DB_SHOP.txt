CREATE TABLE items_tbl( 
items_id INT NOT NULL AUTO_INCREMENT,
DESCRIPTION VARCHAR(80) NOT NULL, 
MAKER VARCHAR(50) NOT NULL, 
QUANTITY INT NOT NULL, 
SIZE VARCHAR(50), 
QUANTITY_RECEIVED INT NOT NULL, 
QUANTITY_ALTER INT NOT NULL,
RATE INT NOT NULL,
TAX_RATE INT NOT NULL,
images_path VARCHAR(300) NOT NULL, 
PRIMARY KEY (items_id) );






CREATE TABLE customers_tbl( 
customer_id INT NOT NULL AUTO_INCREMENT,
FNAME VARCHAR(80) NOT NULL, 
LNAME VARCHAR(50) NOT NULL, 
COMPANY_NAME VARCHAR(80) NOT NULL UNIQUE,
EMAIL VARCHAR(70)  NULL,
MOBILE VARCHAR(10) NOT NULL UNIQUE, 
GSTTREATMENT VARCHAR(50),
GSTN VARCHAR(50),
ADDRESS VARCHAR(150) NOT NULL, 
CITY VARCHAR(50) NOT NULL, 
STATE VARCHAR(50) NOT NULL, 
ZIP VARCHAR(6) NOT NULL, 
PRIMARY KEY (customer_id) );



CREATE TABLE bills_tbl( 
BILL_ID INT NOT NULL AUTO_INCREMENT,
DATE DATE NOT NULL,
DUE_DATE DATE NOT NULL,
customer_id INT NOT NULL,
payment_id  INT ,
TOTAL_AMOUNT INT NOT NULL,
TAXABLE_AMOUNT INT NOT NULL ,
foreign Key(customer_id) references  customers_tbl(customer_id),
PRIMARY KEY (BILL_ID)
);


CREATE TABLE payments_tbl(
payments_id INT NOT NULL AUTO_INCREMENT, 
DATE DATE NOT NULL,
AMOUNT  INT NOT NULL ,
DESCRIPTION VARCHAR(50) NOT NULL, 
BILL_ID INT NOT NULL ,
foreign Key(BILL_ID) references  bills_tbl(BILL_ID),

PRIMARY KEY (payments_id) );



CREATE TABLE bill_items_tbl(
bill_items_id INT NOT NULL AUTO_INCREMENT, 
BILL_ID INT NOT NULL ,
items_id INT NOT NULL,
quantity  INT NOT NULL ,
RATE INT NOT NULL,
foreign Key(BILL_ID) references  bills_tbl(BILL_ID),
foreign Key(items_id) references  items_tbl(items_id) , 
PRIMARY KEY (bill_items_id) );





CREATE TABLE tax_details_tbl(
tax_details_id INT NOT NULL AUTO_INCREMENT, 
BILL_ID INT NOT NULL ,
HSN VARCHAR(15) NOT NULL,
CGST_RATE  INT NOT NULL ,
CGST  INT NOT NULL ,
SGST_RATE  INT NOT NULL ,
SGST  INT NOT NULL ,
IGST_RATE  INT NOT NULL ,
IGST  INT NOT NULL,
foreign Key(BILL_ID) references  bills_tbl(BILL_ID), 
PRIMARY KEY (tax_details_id) );




CREATE TABLE FABRIC_MERCHANTS_TBL( 
FABRIC_MERCHANTS_ID INT NOT NULL AUTO_INCREMENT,
FNAME VARCHAR(80) NOT NULL, 
LNAME VARCHAR(50) NOT NULL, 
COMPANY_NAME VARCHAR(80) NOT NULL UNIQUE,
EMAIL VARCHAR(70)  NULL,
MOBILE VARCHAR(10) NOT NULL UNIQUE, 
GSTN VARCHAR(50),
ADDRESS VARCHAR(150) NOT NULL, 
CITY VARCHAR(50) NOT NULL, 
STATE VARCHAR(50) NOT NULL, 
ZIP VARCHAR(6) NOT NULL, 
PRIMARY KEY (FABRIC_MERCHANTS_ID) );




CREATE TABLE MERCHANT_BILLS_TBL( 
BILL_ID INT NOT NULL AUTO_INCREMENT,
DATE DATE NOT NULL,
FABRIC_MERCHANTS_ID INT NOT NULL,
loc VARCHAR(60),
AMOUNT INT NOT NULL ,
CGST INT NOT NULL ,
SGST INT NOT NULL ,
IGST INT NOT NULL ,
BILL_NO INT NOT NULL ,
foreign Key(FABRIC_MERCHANTS_ID) references  FABRIC_MERCHANTS_TBL(FABRIC_MERCHANTS_ID),
PRIMARY KEY (BILL_ID)
);


ALTER TABLE MERCHANT_BILLS_TBL ADD payment_amount DOUBLE NOT NULL; 

ALTER TABLE MERCHANT_BILLS_TBL ADD MTR VARCHAR(60)  NULL; 

ALTER TABLE MERCHANT_BILLS_TBL ADD RATE VARCHAR(60)  NULL; 



CREATE TABLE merchant_payments_tbl(
payments_id INT NOT NULL AUTO_INCREMENT, 
DATE DATE NOT NULL,
AMOUNT  INT NOT NULL ,
DESCRIPTION VARCHAR(50) NOT NULL, 
BILL_ID INT NOT NULL ,
foreign Key(BILL_ID) references  MERCHANT_BILLS_TBL(BILL_ID),

PRIMARY KEY (payments_id) );


ALTER TABLE bills_tbl ADD transport_name varchar(40); 

ALTER TABLE bills_tbl ADD transport_parcels varchar(40); 


ALTER TABLE bill_items_tbl ADD b_rate INT NOT NULL; 




ALTER TABLE bills_tbl_temp ADD transport_name varchar(40); 

ALTER TABLE bills_tbl_temp ADD transport_parcels varchar(40); 




CREATE TABLE cash_legder(
cash_legder_id INT NOT NULL AUTO_INCREMENT, 
DATE DATE NOT NULL,
AMOUNT  INT NOT NULL ,
DESCRIPTION VARCHAR(50) NOT NULL, 
type varchar(10),
PRIMARY KEY (cash_legder_id) );






CREATE TABLE credits_tbl(
credits_id INT NOT NULL AUTO_INCREMENT, 
DATE DATE NOT NULL,
AMOUNT  INT NOT NULL ,
DESCRIPTION VARCHAR(50) NOT NULL, 
customer_id INT NOT NULL ,
foreign Key(customer_id) references  customers_tbl(customer_id),

PRIMARY KEY (credits_id) );







CREATE TABLE debits_tbl(
debit_id INT NOT NULL AUTO_INCREMENT, 
DATE DATE NOT NULL,
AMOUNT  INT NOT NULL ,
DESCRIPTION VARCHAR(50) NOT NULL, 
FABRIC_MERCHANTS_ID INT NOT NULL ,
foreign Key(FABRIC_MERCHANTS_ID) references  FABRIC_MERCHANTS_TBL(FABRIC_MERCHANTS_ID),

PRIMARY KEY (debit_id) );


*******04.06.2020******************************************************************************************

CREATE TABLE transport_tbl(
transport_id INT NOT NULL AUTO_INCREMENT, 
DATE DATE NULL,
LR VARCHAR(50) NULL, 
transport_name VARCHAR(50)  NULL, 
transport_parcels  INT  NULL ,
BILL_ID INT NOT NULL unique ,
foreign Key(BILL_ID) references  bills_tbl(BILL_ID), 
PRIMARY KEY (transport_id) );



ALTER TABLE transport_tbl ADD EWAY varchar(40); 


*****************************************************************************************************
(BILLS AFTER INSERT)
BEGIN 

DECLARE COMPANYSTATE VARCHAR(50);

SELECT STATE INTO COMPANYSTATE FROM CUSTOMERS_TBL WHERE CUSTOMER_ID= NEW.CUSTOMER_ID;

IF COMPANYSTATE = 'Maharashtra' THEN

UPDATE TAX_DETAILS_TBL SET CGST=((2.5/100)*NEW.TOTAL_AMOUNT), SGST=((2.5/100)*NEW.TOTAL_AMOUNT), IGST=0 WHERE BILL_ID=NEW.BILL_ID;

ELSE

UPDATE TAX_DETAILS_TBL SET CGST=0, SGST=0, IGST=((5/100)*NEW.TOTAL_AMOUNT) WHERE BILL_ID=NEW.BILL_ID;

END IF;

END









(BILLS AFTER UPDATE)
BEGIN 

DECLARE COMPANYSTATE VARCHAR(50);

SELECT STATE INTO COMPANYSTATE FROM CUSTOMERS_TBL WHERE CUSTOMER_ID= NEW.CUSTOMER_ID;

IF COMPANYSTATE = 'Maharashtra' THEN

UPDATE TAX_DETAILS_TBL SET CGST=((2.5/100)*NEW.TOTAL_AMOUNT), SGST=((2.5/100)*NEW.TOTAL_AMOUNT), IGST=0 WHERE BILL_ID=NEW.BILL_ID;

ELSE

UPDATE TAX_DETAILS_TBL SET CGST=0, SGST=0, IGST=((5/100)*NEW.TOTAL_AMOUNT) WHERE BILL_ID=NEW.BILL_ID;

END IF;

END




(BILL ITEMS AFTER INSERT)

BEGIN update bills_tbl set total_amount=total_amount+(NEW.quantity*NEW.rate) where bill_id=NEW.bill_id; update items_tbl set quantity_received=quantity_received-NEW.quantity where items_id=NEW.items_id; END





(BILL ITEMS AFTER DELETE)
BEGIN update bills_tbl set total_amount=total_amount-(OLD.quantity*OLD.rate) where bill_id=OLD.bill_id;
update items_tbl set quantity_received=quantity_received+OLD.quantity where items_id=OLD.items_id; END






*************************************************************************************************************************************************
*****************Backup******************

ALTER TABLE mytable DISCARD TABLESPACE;



ALTER TABLE mytable IMPORT TABLESPACE;






************************************************

select SUM(TOTAL_AMOUNT),C.COMPANY_NAME from bills_tbl B, customers_tbl C WHERE B.customer_id=C.customer_id  GROUP BY C.customer_id


select B.BILL_ID,B.DATE,B.TOTAL_AMOUNT AS AMOUNT,(T.CGST+T.SGST) AS CGSTSGST,T.IGST AS IGST ,(B.TOTAL_AMOUNT+T.CGST+T.SGST+T.IGST) AS TOTALAMOUNT, (SELECT SUM(AMOUNT) FROM payments_tbl WHERE BILL_ID=B.BILL_ID) AS TOTAL_PAYMENT FROM bills_tbl B, tax_details_tbl T, customers_tbl C WHERE B.BILL_ID=T.BILL_ID AND B.customer_id=C.customer_id AND C.COMPANY_NAME="raja rani ho"


select sum(bi.quantity) from bill_items_tbl bi, bills_tbl b where b.BILL_ID=bi.BILL_ID and b.DATE<'2017-08-01'




insert into customers_tbl(FNAME,LNAME,COMPANY_NAME,EMAIL,MOBILE,GSTTREATMENT,GSTN,ADDRESS,CITY,STATE,ZIP) VALUES('sagar','wadhwa','sagar t
raders','nitinw59@gmail.com',9890979244, 'registered','aaaaaaaaaa','ganga','unr','maharashtra','421005');
